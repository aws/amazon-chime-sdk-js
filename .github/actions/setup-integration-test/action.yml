name: Setup Integration Test Action
description: "A composite GitHub action used to download the Chime JS SDK repo, install dependencies and setup testing environment."
inputs:
  sauce-username:
    required: false
    description: "The username of the SauceLabs account"
    default: ""
  sauce-access-key:
    required: false
    description: "The access key of the SauceLabs account"
    default: ""
  sauce-rest-url:
    required: false
    description: "The datacenter endpoint for the SauceLabs Connect Proxy."
    default: "https://saucelabs.com/rest/v1"
  aws-role-to-assume:
    required: true
    description: "The AWS Role to assume"
    default: ""
  aws-role-session-name:
    required: false
    description: "The AWS Role Session Name"
    default: ""
outputs:
  integ_test_required:
    description: "Whether integration tests are required based on changes"
    value: ${{ steps.test_needed.outputs.integ_test_required }}
runs:
  using: "composite"
  steps:
    - name: Check if integration tests are needed
      id: test_needed
      run: |
        source ${GITHUB_WORKSPACE}/integration/js/script/need-integ-test
        check_if_integ_tests_required
        echo "integ_test_required=$requires_integration_test" >> $GITHUB_OUTPUT
        echo "Integration tests required: $requires_integration_test"
      shell: bash
    - name: Pack the Chime SDK and install the tarball into the Demo
      if: steps.test_needed.outputs.integ_test_required == 'true'
      run: |
        current_version=$(.github/script/get-current-version)
        echo "Packing current version:" $current_version
        npm run build
        npm pack
        cd demos/browser
        npm uninstall amazon-chime-sdk-js
        npm install ../../amazon-chime-sdk-js-$current_version.tgz
      shell: bash
    - name: Configure AWS Credentials
      if: steps.test_needed.outputs.integ_test_required == 'true'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role-to-assume }}
        role-session-name: ${{ inputs.aws-role-session-name }}
        aws-region: us-east-1
    - name: Setup Node.js - 20.x
      if: steps.test_needed.outputs.integ_test_required == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
    - name: Check if SauceLabs credentials are provided
      if: steps.test_needed.outputs.integ_test_required == 'true'
      id: check-sauce
      run: |
        if [ -n "${{ inputs.sauce-username }}" ] && [ -n "${{ inputs.sauce-access-key }}" ]; then
          echo "use_sauce=true" >> $GITHUB_OUTPUT
        else
          echo "use_sauce=false" >> $GITHUB_OUTPUT
        fi
      shell: bash
    - name: Create a Job ID for SauceLabs
      if: steps.test_needed.outputs.integ_test_required == 'true' && steps.check-sauce.outputs.use_sauce == 'true'
      id: create-job-id
      uses: filipstefansson/uuid-action@ce29ebbb0981ac2448c2e406e848bfaa30ddf04c
    - name: Set JOB_ID Env Variable for SauceLabs
      if: steps.test_needed.outputs.integ_test_required == 'true' && steps.check-sauce.outputs.use_sauce == 'true'
      run: echo "JOB_ID=${{ steps.create-job-id.outputs.uuid }}" >> $GITHUB_ENV
      shell: bash
    - name: Echo Job ID for SauceLabs
      if: steps.test_needed.outputs.integ_test_required == 'true' && steps.check-sauce.outputs.use_sauce == 'true'
      run: echo "${{ steps.create-job-id.outputs.uuid }}"
      shell: bash
    - name: Setup Sauce Connect
      if: steps.test_needed.outputs.integ_test_required == 'true' && steps.check-sauce.outputs.use_sauce == 'true'
      uses: saucelabs/sauce-connect-action@v3.0.0
      with:
        username: ${{ inputs.sauce-username }}
        accessKey: ${{ inputs.sauce-access-key }}
        tunnelName: ${{ steps.create-job-id.outputs.uuid }}
        region: us
        proxyLocalhost: direct
    - name: Setup Chrome for local testing
      if: steps.test_needed.outputs.integ_test_required == 'true' && steps.check-sauce.outputs.use_sauce == 'false'
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable
    - name: Clean Install
      if: steps.test_needed.outputs.integ_test_required == 'true'
      run: npm ci
      shell: bash
    - name: Add testsite host to /etc/hosts for Linux only (fixes 500 internal error when loading the test page)
      shell: bash
      if: steps.test_needed.outputs.integ_test_required == 'true' && runner.os == 'Linux'
      run: |
          sudo echo "127.0.0.1 testsite" | sudo tee -a /etc/hosts
